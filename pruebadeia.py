# -*- coding: utf-8 -*-
"""pruebaDeIa.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A6R9d54E7iuDJv0kaR8Fp7yHzUqIQOie
"""

import google.generativeai as genai
import PIL.Image
import os
import requests
from urllib3.exceptions import InsecureRequestWarning

API_KEY = "AIzaSyA_ByC3rvWhv8zCECdmxiZPIrCMZfqTdeY"

genai.configure(api_key=API_KEY)

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def get_html_from_url(url):
    try:
        # Realizar una solicitud GET a la URL especificada
        response = requests.get(url, verify=False)
        # Verificar si la solicitud fue exitosa (código de estado 200)
        if response.status_code == 200:
            # Devolver el contenido HTML de la página
            return response.text
        else:
            print(f"Error al obtener HTML: {response.status_code}")
    except Exception as e:
        print(f"Error al obtener HTML: {e}")
    return None

url = "https://github.com"
html_content = get_html_from_url(url)

html_content

model = genai.GenerativeModel(model_name="gemini-1.5-flash")
response = model.generate_content(["Knowing the HTML i provide you, can you give me the classname of the SIGN IN clicleable?¨ONLY GIVE ME THE CLASSNAME, NOTHING ELSE", html_content])
content = response.text
print(content)

content = content.strip()
content

!pip install supabase

!pip install python-dotenv

import supabase
from dotenv import load_dotenv
import os
from supabase import create_client, Client

url: str = "https://segwpauegxdqyfolvqrd.supabase.co"
key: str = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNlZ3dwYXVlZ3hkcXlmb2x2cXJkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYyMjQxMzQsImV4cCI6MjAzMTgwMDEzNH0.8V-VAfb2983I8RkqEPHc5t7YyxbbBFbbjZb2eCnEGRE"
supabase: Client = create_client(url, key)

def check_value_exists(content: str) -> bool:
    # Realizar la consulta
    response = supabase.table("content").select("*").eq("content", content).execute()

    # Verificar si la respuesta contiene datos
    if response.data:
        return True
    else:
        return False

check = check_value_exists(content)
check

if (check == False):
  cont = (
    supabase.table("content")
    .insert({"content": content})
    .execute()
  )
  print(cont)
else:
  cont = supabase.table("content").select("*").eq("content", content).execute()
  print(cont)